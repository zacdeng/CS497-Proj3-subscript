{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { initializeApp } from 'firebase/app';\nimport { useState, useEffect } from \"react\";\nimport { getDatabase, onValue, ref, set } from 'firebase/database';\nimport { getAuth, GoogleAuthProvider, onIdTokenChanged, signInWithPopup, signOut } from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCFyJGqXhKiI5o4i0yt1DlKD1NlITT6My4\",\n  authDomain: \"subscript-1aa30.firebaseapp.com\",\n  projectId: \"subscript-1aa30\",\n  storageBucket: \"subscript-1aa30.appspot.com\",\n  messagingSenderId: \"33642841380\",\n  appId: \"1:33642841380:web:8102ff86c9e19b73355fb1\",\n  measurementId: \"G-Y74360EE24\"\n};\nconst firebase = initializeApp(firebaseConfig);\nconst database = getDatabase(firebase);\nexport const signInWithGoogle = () => {\n  signInWithPopup(getAuth(firebase), new GoogleAuthProvider());\n};\nexport const useUserState = () => {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    onIdTokenChanged(getAuth(firebase), setUser);\n  }, []);\n  return [user];\n};\n\n_s(useUserState, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\nconst firebaseSignOut = () => signOut(getAuth(firebase));\n\nexport { firebaseSignOut as signOut }; // export const writeData = () => {\n//\n// }\n\nexport const useData = path => {\n  _s2();\n\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const dbRef = ref(database, path);\n    const devMode = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\n    if (devMode) {\n      console.log(`loading ${path}`);\n    }\n\n    return onValue(dbRef, snapshot => {\n      const val = snapshot.val();\n\n      if (devMode) {\n        console.log(val);\n      }\n\n      setData(val);\n      setLoading(false);\n      setError(null);\n    }, error => {\n      setData(null);\n      setLoading(false);\n      setError(error);\n    });\n  }, [path]);\n  return [data, loading, error];\n};\n\n_s2(useData, \"NHGwgwF0D09hI9K12vQBrfPMsF4=\");","map":{"version":3,"sources":["/Users/zacdeng/Study/git_repo/subscript/src/utilities/firebase.js"],"names":["initializeApp","useState","useEffect","getDatabase","onValue","ref","set","getAuth","GoogleAuthProvider","onIdTokenChanged","signInWithPopup","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","database","signInWithGoogle","useUserState","user","setUser","firebaseSignOut","useData","path","data","setData","loading","setLoading","error","setError","dbRef","devMode","process","env","NODE_ENV","console","log","snapshot","val"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,GAA/B,EAAoCC,GAApC,QAA+C,mBAA/C;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,gBAAtC,EAAwDC,eAAxD,EAAyEC,OAAzE,QAAwF,eAAxF;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,iCAFO;AAGnBC,EAAAA,SAAS,EAAE,iBAHQ;AAInBC,EAAAA,aAAa,EAAE,6BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,aALA;AAMnBC,EAAAA,KAAK,EAAE,0CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AAUA,MAAMC,QAAQ,GAAGpB,aAAa,CAACY,cAAD,CAA9B;AACA,MAAMS,QAAQ,GAAGlB,WAAW,CAACiB,QAAD,CAA5B;AAEA,OAAO,MAAME,gBAAgB,GAAG,MAAM;AAClCZ,EAAAA,eAAe,CAACH,OAAO,CAACa,QAAD,CAAR,EAAoB,IAAIZ,kBAAJ,EAApB,CAAf;AACH,CAFM;AAIP,OAAO,MAAMe,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,gBAAgB,CAACF,OAAO,CAACa,QAAD,CAAR,EAAoBK,OAApB,CAAhB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACD,IAAD,CAAP;AACH,CARM;;GAAMD,Y;;AAUb,MAAMG,eAAe,GAAG,MAAMf,OAAO,CAACJ,OAAO,CAACa,QAAD,CAAR,CAArC;;AAEA,SAASM,eAAe,IAAIf,OAA5B,G,CAEA;AACA;AACA;;AAEA,OAAO,MAAMgB,OAAO,GAAIC,IAAD,IAAU;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,EAAhC;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiC,KAAK,GAAG9B,GAAG,CAACgB,QAAD,EAAWO,IAAX,CAAjB;AACA,UAAMQ,OAAO,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAb,IAAyBF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAlE;;AACA,QAAIH,OAAJ,EAAa;AAAEI,MAAAA,OAAO,CAACC,GAAR,CAAa,WAAUb,IAAK,EAA5B;AAAiC;;AAChD,WAAOxB,OAAO,CAAC+B,KAAD,EAASO,QAAD,IAAc;AAChC,YAAMC,GAAG,GAAGD,QAAQ,CAACC,GAAT,EAAZ;;AACA,UAAIP,OAAJ,EAAa;AAAEI,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAAmB;;AAClCb,MAAAA,OAAO,CAACa,GAAD,CAAP;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KANa,EAMVD,KAAD,IAAW;AACVH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAVa,CAAd;AAWH,GAfQ,EAeN,CAACL,IAAD,CAfM,CAAT;AAiBA,SAAO,CAACC,IAAD,EAAOE,OAAP,EAAgBE,KAAhB,CAAP;AACH,CAvBM;;IAAMN,O","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {useState, useEffect} from \"react\";\nimport { getDatabase, onValue, ref, set } from 'firebase/database';\nimport { getAuth, GoogleAuthProvider, onIdTokenChanged, signInWithPopup, signOut } from 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCFyJGqXhKiI5o4i0yt1DlKD1NlITT6My4\",\n    authDomain: \"subscript-1aa30.firebaseapp.com\",\n    projectId: \"subscript-1aa30\",\n    storageBucket: \"subscript-1aa30.appspot.com\",\n    messagingSenderId: \"33642841380\",\n    appId: \"1:33642841380:web:8102ff86c9e19b73355fb1\",\n    measurementId: \"G-Y74360EE24\"\n};\n\nconst firebase = initializeApp(firebaseConfig);\nconst database = getDatabase(firebase);\n\nexport const signInWithGoogle = () => {\n    signInWithPopup(getAuth(firebase), new GoogleAuthProvider());\n};\n\nexport const useUserState = () => {\n    const [user, setUser] = useState();\n\n    useEffect(() => {\n        onIdTokenChanged(getAuth(firebase), setUser);\n    }, []);\n\n    return [user];\n};\n\nconst firebaseSignOut = () => signOut(getAuth(firebase));\n\nexport { firebaseSignOut as signOut };\n\n// export const writeData = () => {\n//\n// }\n\nexport const useData = (path) => {\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        const dbRef = ref(database, path);\n        const devMode = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n        if (devMode) { console.log(`loading ${path}`); }\n        return onValue(dbRef, (snapshot) => {\n            const val = snapshot.val();\n            if (devMode) { console.log(val); }\n            setData(val);\n            setLoading(false);\n            setError(null);\n        }, (error) => {\n            setData(null);\n            setLoading(false);\n            setError(error);\n        });\n    }, [path]);\n\n    return [data, loading, error];\n};"]},"metadata":{},"sourceType":"module"}