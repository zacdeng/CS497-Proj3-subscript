{"ast":null,"code":"var _jsxFileName = \"/Users/zacdeng/Study/git_repo/subscript/src/utilities/RightCard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useUserState } from \"./firebase\";\nimport \"./css/RightCard.css\";\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { useData } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataMock = [{\n  title: 'Netfix',\n  value: 17.99,\n  color: 'rgba(252, 108, 70, 0.9)'\n}, {\n  title: 'Adobe',\n  value: 19.99,\n  color: 'rgba(28, 133, 255, 0.9)'\n}, {\n  title: 'Spotify',\n  value: 4.99,\n  color: 'rgba(255, 194, 59, 0.9)'\n}, {\n  title: 'Paste',\n  value: 14.99,\n  color: 'rgba(233, 166, 153, 0.9)'\n}];\n\nconst RightCardStatic = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      data: dataMock,\n      radius: 30,\n      segmentsShift: index => index === 0 ? 3 : 0.7,\n      label: _ref => {\n        let {\n          dataEntry\n        } = _ref;\n        return Math.round(dataEntry.percentage) + \"%\";\n      },\n      labelStyle: index => ({\n        fill: \"white\",\n        fontSize: '5px',\n        fontFamily: 'sans-serif'\n      }),\n      onMouseOver: (e, segmentIndex) => {},\n      onMouseOut: (e, segmentIndex) => {},\n      onClick: (e, segmentIndex) => {},\n      animate: true,\n      animationDuration: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RightCardStatic;\n\nconst RightCardLogin = _ref2 => {\n  _s();\n\n  let {\n    user,\n    loginDataMock,\n    setLoginDataMock\n  } = _ref2;\n\n  const reformatPath = path => path.replace(/[^A-Z0-9]+/ig, \"_\");\n\n  const generateColorNum = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n  const generateColor = () => {\n    return 'rgba(' + generateColorNum(0, 255) + ', ' + generateColorNum(0, 255) + ', ' + generateColorNum(0, 255) + ', ' + 0.9 + ')';\n  };\n\n  const [subscriptionsData, loading, error] = useData(\"/\" + reformatPath(user.email) + \"/subscriptions\");\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading the pie-chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this);\n  subscriptionsData != null ? subscriptionsData.map(e => {\n    loginDataMockCopy.push({\n      title: e.name,\n      value: e.price,\n      color: generateColor()\n    });\n  }) : loginDataMockCopy = [];\n  setLoginDataMock(loginDataMockCopy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      data: loginDataMock,\n      radius: 30,\n      segmentsShift: index => index === 0 ? 3 : 0.7,\n      label: _ref3 => {\n        let {\n          dataEntry\n        } = _ref3;\n        return Math.round(dataEntry.percentage) + \"%\";\n      },\n      labelStyle: index => ({\n        fill: \"white\",\n        fontSize: '5px',\n        fontFamily: 'sans-serif'\n      }),\n      onMouseOver: (e, segmentIndex) => {},\n      onMouseOut: (e, segmentIndex) => {},\n      onClick: (e, segmentIndex) => {},\n      animate: true,\n      animationDuration: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RightCardLogin, \"xRRrBn7dxOjuApEM4vux8p2KWHE=\", false, function () {\n  return [useData];\n});\n\n_c2 = RightCardLogin;\nexport const RightCard = () => {\n  _s2();\n\n  const [user] = useUserState();\n  const [loginDataMock, setLoginDataMock] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rightcard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user ? /*#__PURE__*/_jsxDEV(RightCardLogin, {\n        user: user,\n        loginDataMock: loginDataMock,\n        setLoginDataMock: setLoginDataMock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(RightCardStatic, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 83\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(RightCard, \"EZKpcXgecx1T4s4FVrjBun6X65o=\", false, function () {\n  return [useUserState];\n});\n\n_c3 = RightCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RightCardStatic\");\n$RefreshReg$(_c2, \"RightCardLogin\");\n$RefreshReg$(_c3, \"RightCard\");","map":{"version":3,"sources":["/Users/zacdeng/Study/git_repo/subscript/src/utilities/RightCard.js"],"names":["React","useState","useUserState","PieChart","useData","dataMock","title","value","color","RightCardStatic","index","dataEntry","Math","round","percentage","fill","fontSize","fontFamily","e","segmentIndex","RightCardLogin","user","loginDataMock","setLoginDataMock","reformatPath","path","replace","generateColorNum","min","max","ceil","floor","random","generateColor","subscriptionsData","loading","error","email","map","loginDataMockCopy","push","name","price","RightCard"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { useUserState } from \"./firebase\";\nimport \"./css/RightCard.css\"\nimport { PieChart } from 'react-minimal-pie-chart';\nimport {useData} from \"./firebase\";\n\n\nconst dataMock = [\n    { title: 'Netfix', value: 17.99, color: 'rgba(252, 108, 70, 0.9)' },\n    { title: 'Adobe', value: 19.99, color: 'rgba(28, 133, 255, 0.9)' },\n    { title: 'Spotify', value: 4.99, color: 'rgba(255, 194, 59, 0.9)' },\n    { title: 'Paste', value: 14.99, color: 'rgba(233, 166, 153, 0.9)'},\n];\n\nconst RightCardStatic = () => {\n    return (\n        <div>\n            <PieChart data={dataMock}\n                      radius={30}\n                      segmentsShift={(index) => (index === 0 ? 3 : 0.7)}\n                      label={({ dataEntry }) => Math.round(dataEntry.percentage) + \"%\"}\n                      labelStyle={(index) => ({\n                          fill: \"white\",\n                          fontSize: '5px',\n                          fontFamily: 'sans-serif',\n                      })}\n                      onMouseOver={(e, segmentIndex) => {\n\n                      }}\n                      onMouseOut={(e, segmentIndex) => {\n\n                      }}\n                      onClick={(e, segmentIndex) => {\n\n                      }}\n                      animate\n                      animationDuration={1000}\n            />\n        </div>\n    )\n}\n\nconst RightCardLogin = ({user, loginDataMock, setLoginDataMock}) => {\n    const reformatPath = (path) => path.replace(/[^A-Z0-9]+/ig, \"_\");\n    const generateColorNum = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    const generateColor = () => {\n        return 'rgba(' + generateColorNum(0, 255) + ', ' + generateColorNum(0, 255) + ', ' + generateColorNum(0, 255) + ', ' + 0.9 + ')';\n    }\n\n    const [subscriptionsData, loading, error] = useData(\"/\" + reformatPath(user.email) + \"/subscriptions\");\n    if (error) return <h2>{error}</h2>;\n    if (loading) return <h2>Loading the pie-chart...</h2>;\n\n    subscriptionsData != null ? subscriptionsData.map((e) => {\n        loginDataMockCopy.push({ title: e.name, value: e.price, color: generateColor()});\n    }) : loginDataMockCopy = [];\n\n    setLoginDataMock(loginDataMockCopy);\n\n    return (\n        <div>\n            <PieChart data={loginDataMock}\n                      radius={30}\n                      segmentsShift={(index) => (index === 0 ? 3 : 0.7)}\n                      label={({ dataEntry }) => Math.round(dataEntry.percentage) + \"%\"}\n                      labelStyle={(index) => ({\n                          fill: \"white\",\n                          fontSize: '5px',\n                          fontFamily: 'sans-serif',\n                      })}\n                      onMouseOver={(e, segmentIndex) => {\n\n                      }}\n                      onMouseOut={(e, segmentIndex) => {\n\n                      }}\n                      onClick={(e, segmentIndex) => {\n\n                      }}\n                      animate\n                      animationDuration={1000}\n            />\n        </div>\n    )\n}\n\nexport const RightCard = () => {\n    const [user] = useUserState();\n    const [loginDataMock, setLoginDataMock] = useState([]);\n\n    return (\n        <div className=\"rightcard\">\n            <div>\n                { user ?  <RightCardLogin user={user}\n                                          loginDataMock={loginDataMock}\n                                          setLoginDataMock={setLoginDataMock}/> : <RightCardStatic /> }\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}